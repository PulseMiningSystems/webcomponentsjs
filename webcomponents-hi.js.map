{"version":3,"sources":["node_modules/webcomponents-polyfills/packages/html-imports/src/html-imports.js","src/post-polyfill.js","src/unresolved.js"],"names":["scope","newCustomEvent","type","params","window","CustomEvent","event","document","createEvent","initCustomEvent","bubbles","cancelable","detail","importForElement","element","useNative","ownerDocument","doc","parentNode","closest","importSelector","isImportLink","whenImportsReady","callback","imports","QSA","rootImportSelector","pending","length","forEach","imp","whenElementLoaded","whenDocumentReady","stateChanged","readyState","body","removeEventListener","addEventListener","whenReady","localName","src","firstChild","namespaceURI","onLoadingDone","isIE","isEdge","node","nodeType","Node","ELEMENT_NODE","rel","constructor","Importer","documents","inflight","dynamicImportsMO","MutationObserver","m","handleMutations","observe","head","childList","subtree","loadImports","replaceScripts","fragment","template","HTMLTemplateElement","content","scriptsSelector","script","clone","createElement","attributes","attr","setAttribute","name","value","textContent","replaceChild","selector","childNodes","querySelectorAll","emptyNodeList","list","inverseOrder","increment","i","link","currentScript","Object","defineProperty","get","scripts","configurable","CSS_URL_REGEXP","CSS_IMPORT_REGEXP","STYLESHEET_REGEXP","Path","fixUrls","base","href","resolveUrl","getAttribute","r","replaceUrls","text","linkUrl","regexp","replace","pre","url","post","urlPath","undefined","__workingURL","u","URL","pathname","e","__tempDoc","implementation","createHTMLDocument","__base","appendChild","__anchor","Xhr","async","load","success","fail","match","pieces","split","resource","header","indexOf","atob","decodeURIComponent","attemptGet","attempt","then","resourceUrl","err","console","error","sleep","Math","random","ms","Promise","res","setTimeout","useCache","redirectedUrl","fetch","cache","ok","Error","status","test","navigator","userAgent","links","loadImport","fireEventIfNeeded","makeDocument","processImportsIfLoadingDone","createDocumentFragment","p1","p2","innerHTML","baseEl","querySelector","removeAttribute","n$","importDependenciesSelector","inlineScriptIndex","n","styleNeedsCloning","cloneStyle","importDependencyAttr","encodeURIComponent","num","style","disconnect","flatten","scriptsOk","stylesOk","fireEvents","waitForStyles","runScripts","DOCUMENT_FRAGMENT_NODE","cloneScript","l","s","s$","pendingScriptsSelector","pendingStylesSelector","needsMove","disabledLinkSelector","defaultView","top","placeholder","insertBefore","nextSibling","newSibling","import","dispatchEvent","eventType","mutations","addedNodes","elem","importer","imps","target","native_baseURI","getOwnPropertyDescriptor","prototype","klass","Element","ownerDoc","call","location","enumerable","HTMLLinkElement","HTMLImports","customElements","Template","WebComponents","flushCallback","runAndClearCallback","bootstrap","cb","origWhenReady","requestAnimationFrame","ready"],"mappings":"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","file":"webcomponents-hi.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n((scope) => {\n  /********************* base setup *********************/\n  const link = document.createElement('link');\n  const useNative = Boolean('import' in link);\n  const emptyNodeList = link.querySelectorAll('*');\n\n  // Polyfill `currentScript` for browsers without it.\n  let currentScript = null;\n  if ('currentScript' in document === false) {\n    Object.defineProperty(document, 'currentScript', {\n      get() {\n        return (\n          currentScript ||\n          // NOTE: only works when called in synchronously executing code.\n          // readyState should check if `loading` but IE10 is\n          // interactive when scripts run so we cheat. This is not needed by\n          // html-imports polyfill but helps generally polyfill `currentScript`.\n          (document.readyState !== 'complete'\n            ? document.scripts[document.scripts.length - 1]\n            : null)\n        );\n      },\n      configurable: true,\n    });\n  }\n\n  /**\n   * @param {Array|NodeList|NamedNodeMap} list\n   * @param {!Function} callback\n   * @param {boolean=} inverseOrder\n   */\n  const forEach = (list, callback, inverseOrder) => {\n    const length = list ? list.length : 0;\n    const increment = inverseOrder ? -1 : 1;\n    let i = inverseOrder ? length - 1 : 0;\n    for (; i < length && i >= 0; i = i + increment) {\n      callback(list[i], i);\n    }\n  };\n\n  /**\n   * @param {!Node} node\n   * @param {!string} selector\n   * @return {!NodeList<!Element>}\n   */\n  const QSA = (node, selector) => {\n    // IE 11 throws a SyntaxError if a node with no children is queried with\n    // a selector containing the `:not([type])` syntax.\n    if (!node.childNodes.length) {\n      return emptyNodeList;\n    }\n    return node.querySelectorAll(selector);\n  };\n\n  /**\n   * @param {!DocumentFragment} fragment\n   */\n  const replaceScripts = (fragment) => {\n    forEach(QSA(fragment, 'template'), (template) => {\n      if (!(template instanceof HTMLTemplateElement))\n        return;\n      forEach(QSA(template.content, scriptsSelector), (script) => {\n        const clone =\n          /** @type {!HTMLScriptElement} */\n          (document.createElement('script'));\n        forEach(script.attributes, (attr) =>\n          clone.setAttribute(attr.name, attr.value)\n        );\n        clone.textContent = script.textContent;\n        script.parentNode.replaceChild(clone, script);\n      });\n      replaceScripts(template.content);\n    });\n  };\n\n  /********************* path fixup *********************/\n  const CSS_URL_REGEXP = /(url\\()([^)]*)(\\))/g;\n  const CSS_IMPORT_REGEXP = /(@import[\\s]+(?!url\\())([^;]*)(;)/g;\n  const STYLESHEET_REGEXP = /(<link[^>]*)(rel=['|\"]?stylesheet['|\"]?[^>]*>)/g;\n\n  // path fixup: style elements in imports must be made relative to the main\n  // document. We fixup url's in url() and @import.\n  const Path = {\n    fixUrls(element, base) {\n      if (element.href) {\n        element.setAttribute(\n          'href',\n          Path.resolveUrl(element.getAttribute('href'), base)\n        );\n      }\n      if (element.src) {\n        element.setAttribute(\n          'src',\n          Path.resolveUrl(element.getAttribute('src'), base)\n        );\n      }\n      if (element.localName === 'style') {\n        const r = Path.replaceUrls(element.textContent, base, CSS_URL_REGEXP);\n        element.textContent = Path.replaceUrls(r, base, CSS_IMPORT_REGEXP);\n      }\n    },\n\n    replaceUrls(text, linkUrl, regexp) {\n      return text.replace(regexp, (m, pre, url, post) => {\n        let urlPath = url.replace(/[\"']/g, '');\n        if (linkUrl) {\n          urlPath = Path.resolveUrl(urlPath, linkUrl);\n        }\n        return pre + \"'\" + urlPath + \"'\" + post;\n      });\n    },\n\n    resolveUrl(url, base) {\n      // Lazy feature detection.\n      if (Path.__workingURL === undefined) {\n        Path.__workingURL = false;\n        try {\n          const u = new URL('b', 'http://a');\n          u.pathname = 'c%20d';\n          Path.__workingURL = u.href === 'http://a/c%20d';\n        } catch (e) {} // eslint-disable-line no-empty\n      }\n\n      if (Path.__workingURL) {\n        return new URL(url, base).href;\n      }\n\n      // Fallback to creating an anchor into a disconnected document.\n      let doc = Path.__tempDoc;\n      if (!doc) {\n        doc = document.implementation.createHTMLDocument('temp');\n        Path.__tempDoc = doc;\n        doc.__base = doc.createElement('base');\n        doc.head.appendChild(doc.__base);\n        doc.__anchor = doc.createElement('a');\n      }\n      doc.__base.href = base;\n      doc.__anchor.href = url;\n      return doc.__anchor.href || url;\n    },\n  };\n\n  /********************* Xhr processor *********************/\n  const Xhr = {\n    async: true,\n\n    /**\n     * @param {!string} url\n     * @param {!function(!string, string=)} success\n     * @param {!function()} fail\n     */\n    load(url, success, fail) {\n      if (!url) {\n        fail();\n      } else if (url.match(/^data:/)) {\n        // Handle Data URI Scheme\n        const pieces = url.split(',');\n        const header = pieces[0];\n        let resource = pieces[1];\n        if (header.indexOf(';base64') > -1) {\n          resource = atob(resource);\n        } else {\n          resource = decodeURIComponent(resource);\n        }\n        success(resource);\n      } else {\n        function get(useCache) {\n          let redirectedUrl = null;\n          return fetch(url, { cache: useCache ? 'default' : 'reload' })\n            .then(res => {\n              if (!res.ok)\n                throw new Error(`HTTP ${res.status}`);\n              redirectedUrl = res.url;\n              return res.text();\n            })\n            .then(resource => {\n              return { resource, redirectedUrl };\n            });\n        }\n\n        function retryTime(attempt) {\n          return Math.random() * 100 * 2 ** attempt;\n        }\n\n        function sleep(ms) {\n          return new Promise(res => setTimeout(res, ms));\n        }\n\n        function attemptGet(attempt = 0) {\n          return get(attempt === 0)\n            .then(({ resource, resourceUrl }) => {\n              success(resource, resourceUrl);\n            }, err => {\n              console.error(err);\n              if (attempt >= 2) {\n                fail();\n              } else {\n                return sleep(retryTime(attempt))\n                  .then(() => attemptGet(attempt + 1));\n              }\n            });\n        }\n\n        attemptGet();\n      }\n    },\n  };\n\n  /********************* importer *********************/\n\n  const isIE = /Trident/.test(navigator.userAgent);\n\n  const isEdge = /Edge\\/\\d./i.test(navigator.userAgent);\n\n  const importSelector = 'link[rel=import]';\n\n  // Used to disable loading of resources.\n  const importDisableType = 'import-disable';\n\n  const disabledLinkSelector = `link[rel=stylesheet][href][type=${importDisableType}]`;\n\n  const scriptsSelector =\n    `script:not([type]),script[type=\"application/javascript\"],` +\n    `script[type=\"text/javascript\"],script[type=\"module\"]`;\n\n  const importDependenciesSelector =\n    `${importSelector},${disabledLinkSelector},` +\n    `style:not([type]),link[rel=stylesheet][href]:not([type]),` +\n    scriptsSelector;\n\n  const importDependencyAttr = 'import-dependency';\n\n  const rootImportSelector = `${importSelector}:not([${importDependencyAttr}])`;\n\n  const pendingScriptsSelector = `script[${importDependencyAttr}]`;\n\n  const pendingStylesSelector =\n    `style[${importDependencyAttr}],` +\n    `link[rel=stylesheet][${importDependencyAttr}]`;\n\n  /**\n   * Importer will:\n   * - load any linked import documents (with deduping)\n   * - whenever an import is loaded, prompt the parser to try to parse\n   * - observe imported documents for new elements (these are handled via the\n   *   dynamic importer)\n   */\n  class Importer {\n    constructor() {\n      this.documents = {};\n      // Used to keep track of pending loads, so that flattening and firing of\n      // events can be done when all resources are ready.\n      this.inflight = 0;\n      this.dynamicImportsMO = new MutationObserver((m) =>\n        this.handleMutations(m)\n      );\n      // Observe changes on <head>.\n      this.dynamicImportsMO.observe(document.head, {\n        childList: true,\n        subtree: true,\n      });\n      // 1. Load imports contents\n      // 2. Assign them to first import links on the document\n      // 3. Wait for import styles & scripts to be done loading/running\n      // 4. Fire load/error events\n      this.loadImports(document);\n    }\n\n    /**\n     * @param {!(HTMLDocument|DocumentFragment|Element)} doc\n     */\n    loadImports(doc) {\n      const links =\n        /** @type {!NodeList<!HTMLLinkElement>} */\n        (QSA(doc, importSelector));\n      forEach(links, (link) => this.loadImport(link));\n    }\n\n    /**\n     * @param {!HTMLLinkElement} link\n     */\n    loadImport(link) {\n      const url = link.href;\n      // This resource is already being handled by another import.\n      if (this.documents[url] !== undefined) {\n        // If import is already loaded, we can safely associate it to the link\n        // and fire the load/error event.\n        const imp = this.documents[url];\n        if (imp && imp['__loaded']) {\n          link['__import'] = imp;\n          this.fireEventIfNeeded(link);\n        }\n        return;\n      }\n      this.inflight++;\n      // Mark it as pending to notify others this url is being loaded.\n      this.documents[url] = 'pending';\n      Xhr.load(\n        url,\n        (resource, redirectedUrl) => {\n          const doc = this.makeDocument(resource, redirectedUrl || url);\n          this.documents[url] = doc;\n          this.inflight--;\n          // Load subtree.\n          this.loadImports(doc);\n          this.processImportsIfLoadingDone();\n        },\n        () => {\n          // If load fails, handle error.\n          this.documents[url] = null;\n          this.inflight--;\n          this.processImportsIfLoadingDone();\n        }\n      );\n    }\n\n    /**\n     * Creates a new document containing resource and normalizes urls accordingly.\n     * @param {string=} resource\n     * @param {string=} url\n     * @return {!DocumentFragment}\n     */\n    makeDocument(resource, url) {\n      if (!resource) {\n        return document.createDocumentFragment();\n      }\n\n      if (isIE || isEdge) {\n        // <link rel=stylesheet> should be appended to <head>. Not doing so\n        // in IE/Edge breaks the cascading order. We disable the loading by\n        // setting the type before setting innerHTML to avoid loading\n        // resources twice.\n        resource = resource.replace(STYLESHEET_REGEXP, (match, p1, p2) => {\n          if (match.indexOf('type=') === -1) {\n            return `${p1} type=${importDisableType} ${p2}`;\n          }\n          return match;\n        });\n      }\n\n      let content;\n      const template =\n        /** @type {!HTMLTemplateElement} */\n        (document.createElement('template'));\n      template.innerHTML = resource;\n      if (template.content) {\n        content = template.content;\n        // Clone scripts inside templates since they won't execute when the\n        // hosting template is cloned.\n        replaceScripts(content);\n      } else {\n        // <template> not supported, create fragment and move content into it.\n        content = document.createDocumentFragment();\n        while (template.firstChild) {\n          content.appendChild(template.firstChild);\n        }\n      }\n\n      // Support <base> in imported docs. Resolve url and remove its href.\n      const baseEl = content.querySelector('base');\n      if (baseEl) {\n        url = Path.resolveUrl(baseEl.getAttribute('href'), url);\n        baseEl.removeAttribute('href');\n      }\n\n      const n$ =\n        /** @type {!NodeList<!(HTMLLinkElement|HTMLScriptElement|HTMLStyleElement)>} */\n        (QSA(content, importDependenciesSelector));\n      // For source map hints.\n      let inlineScriptIndex = 0;\n      forEach(n$, (n) => {\n        whenElementLoaded(n);\n        Path.fixUrls(n, url);\n        if (n.localName === 'style' && this.styleNeedsCloning(n)) {\n          const clone = this.cloneStyle(n);\n          whenElementLoaded(clone);\n          n.parentNode.replaceChild(clone, n);\n          n = clone;\n        }\n        // Mark for easier selectors.\n        n.setAttribute(importDependencyAttr, '');\n        // Generate source map hints for inline scripts.\n        if (n.localName === 'script' && !n.src && n.textContent) {\n          if (n.type === 'module') {\n            throw new Error(\n              'Inline module scripts are not supported in HTML Imports.'\n            );\n          }\n          const num = inlineScriptIndex ? `-${inlineScriptIndex}` : '';\n          const content = n.textContent + `\\n//# sourceURL=${url}${num}.js\\n`;\n          // We use the src attribute so it triggers load/error events, and it's\n          // easier to capture errors (e.g. parsing) like this.\n          n.setAttribute(\n            'src',\n            'data:text/javascript;charset=utf-8,' + encodeURIComponent(content)\n          );\n          n.textContent = '';\n          inlineScriptIndex++;\n        }\n      });\n      return content;\n    }\n\n    /**\n     * @param {!HTMLStyleElement} style\n     * @return {boolean}\n     */\n    styleNeedsCloning(style) {\n      return isEdge && style.textContent.indexOf('@import') > -1;\n    }\n\n    /**\n     * In Edge, styles with `@import` will not load if the text content is\n     * modified, or the style is moved.\n     *\n     * We must clone the style, but not with `cloneNode()` as that carries the\n     * implicit \"loaded\" state somehow.\n     * @param {!HTMLStyleElement} style\n     * @return {!HTMLStyleElement}\n     */\n    cloneStyle(style) {\n      const clone = /** @type {!HTMLStyleElement} */ (style.ownerDocument.createElement(\n        'style'\n      ));\n      clone.textContent = style.textContent;\n      forEach(style.attributes, (attr) =>\n        clone.setAttribute(attr.name, attr.value)\n      );\n      return clone;\n    }\n\n    /**\n     * Waits for loaded imports to finish loading scripts and styles, then fires\n     * the load/error events.\n     */\n    processImportsIfLoadingDone() {\n      // Wait until all resources are ready, then load import resources.\n      if (this.inflight) {\n        return;\n      }\n\n      // Stop observing, flatten & load resource, then restart observing <head>.\n      this.dynamicImportsMO.disconnect();\n      this.flatten(document);\n      // We wait for styles to load, and at the same time we execute the scripts,\n      // then fire the load/error events for imports to have faster whenReady\n      // callback execution.\n      // NOTE: This is different for native behavior where scripts would be\n      // executed after the styles before them are loaded.\n      // To achieve that, we could select pending styles and scripts in the\n      // document and execute them sequentially in their dom order.\n      let scriptsOk = false,\n        stylesOk = false;\n      const onLoadingDone = () => {\n        if (stylesOk && scriptsOk) {\n          // Catch any imports that might have been added while we\n          // weren't looking, wait for them as well.\n          this.loadImports(document);\n          if (this.inflight) {\n            return;\n          }\n\n          // Restart observing.\n          this.dynamicImportsMO.observe(document.head, {\n            childList: true,\n            subtree: true,\n          });\n          this.fireEvents();\n        }\n      };\n      this.waitForStyles(() => {\n        stylesOk = true;\n        onLoadingDone();\n      });\n      this.runScripts(() => {\n        scriptsOk = true;\n        onLoadingDone();\n      });\n    }\n\n    /**\n     * @param {!HTMLDocument} doc\n     */\n    flatten(doc) {\n      const n$ =\n        /** @type {!NodeList<!HTMLLinkElement>} */\n        (QSA(doc, importSelector));\n      forEach(n$, (n) => {\n        const imp = this.documents[n.href];\n        n['__import'] = /** @type {!Document} */ (imp);\n        if (imp && imp.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n          // We set the .import to be the link itself, and update its readyState.\n          // Other links with the same href will point to this link.\n          this.documents[n.href] = n;\n          n.readyState = 'loading';\n          n['__import'] = n;\n          this.flatten(imp);\n          n.appendChild(imp);\n        }\n      });\n    }\n\n    /**\n     * Replaces all the imported scripts with a clone in order to execute them.\n     * Updates the `currentScript`.\n     * @param {!function()} callback\n     */\n    runScripts(callback) {\n      const s$ = QSA(document, pendingScriptsSelector);\n      const l = s$.length;\n      const cloneScript = (i) => {\n        if (i < l) {\n          // The pending scripts have been generated through innerHTML and\n          // browsers won't execute them for security reasons. We cannot use\n          // s.cloneNode(true) either, the only way to run the script is manually\n          // creating a new element and copying its attributes.\n          const s = s$[i];\n          const clone =\n            /** @type {!HTMLScriptElement} */\n            (document.createElement('script'));\n          // Remove import-dependency attribute to avoid double cloning.\n          s.removeAttribute(importDependencyAttr);\n          forEach(s.attributes, (attr) =>\n            clone.setAttribute(attr.name, attr.value)\n          );\n          // Update currentScript and replace original with clone script.\n          currentScript = clone;\n          s.parentNode.replaceChild(clone, s);\n          whenElementLoaded(clone, () => {\n            currentScript = null;\n            cloneScript(i + 1);\n          });\n        } else {\n          callback();\n        }\n      };\n      cloneScript(0);\n    }\n\n    /**\n     * Waits for all the imported stylesheets/styles to be loaded.\n     * @param {!function()} callback\n     */\n    waitForStyles(callback) {\n      const s$ =\n        /** @type {!NodeList<!(HTMLLinkElement|HTMLStyleElement)>} */\n        (QSA(document, pendingStylesSelector));\n      let pending = s$.length;\n      if (!pending) {\n        callback();\n        return;\n      }\n      // <link rel=stylesheet> should be appended to <head>. Not doing so\n      // in IE/Edge breaks the cascading order\n      // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10472273/\n      // If there is one <link rel=stylesheet> imported, we must move all imported\n      // links and styles to <head>.\n      const needsMove =\n        (isIE || isEdge) && !!document.querySelector(disabledLinkSelector);\n      forEach(s$, (s) => {\n        // Listen for load/error events, remove selector once is done loading.\n        if (\n          needsMove &&\n          this.styleNeedsCloning(s) &&\n          s.ownerDocument.defaultView !== window.top\n        ) {\n          // If a style is moved in Edge with an `@import` and there's a <link> in the page,\n          // and the style is in an iframe, the style won't fire a load event.\n          s['__loaded'] = true;\n        }\n        whenElementLoaded(s, () => {\n          s.removeAttribute(importDependencyAttr);\n          if (--pending === 0) {\n            callback();\n          }\n        });\n        // Check if was already moved to head, to handle the case where the element\n        // has already been moved but it is still loading.\n        if (needsMove && s.parentNode !== document.head) {\n          // Replace the element we're about to move with a placeholder.\n          const placeholder = document.createElement(s.localName);\n          // Add reference of the moved element.\n          placeholder['__appliedElement'] = s;\n          // Disable this from appearing in document.styleSheets.\n          placeholder.setAttribute('type', 'import-placeholder');\n          // Append placeholder next to the sibling, and move original to <head>.\n          s.parentNode.insertBefore(placeholder, s.nextSibling);\n          let newSibling = importForElement(s);\n          while (newSibling && importForElement(newSibling)) {\n            newSibling = importForElement(newSibling);\n          }\n          if (newSibling.parentNode !== document.head) {\n            newSibling = null;\n          }\n          document.head.insertBefore(s, newSibling);\n          // Enable the loading of <link rel=stylesheet>.\n          s.removeAttribute('type');\n        }\n      });\n    }\n\n    /**\n     * Fires load/error events for imports in the right order .\n     */\n    fireEvents() {\n      const n$ =\n        /** @type {!NodeList<!HTMLLinkElement>} */\n        (QSA(document, importSelector));\n      // Inverse order to have events firing bottom-up.\n      forEach(n$, (n) => this.fireEventIfNeeded(n), true);\n    }\n\n    /**\n     * Fires load/error event for the import if this wasn't done already.\n     * @param {!HTMLLinkElement} link\n     */\n    fireEventIfNeeded(link) {\n      // Don't fire twice same event.\n      if (!link['__loaded']) {\n        link['__loaded'] = true;\n        // Update link's import readyState.\n        link.import && (link.import.readyState = 'complete');\n        const eventType = link.import ? 'load' : 'error';\n        link.dispatchEvent(\n          newCustomEvent(eventType, {\n            bubbles: false,\n            cancelable: false,\n            detail: undefined,\n          })\n        );\n      }\n    }\n\n    /**\n     * @param {Array<MutationRecord>} mutations\n     */\n    handleMutations(mutations) {\n      forEach(mutations, (m) =>\n        forEach(m.addedNodes, (elem) => {\n          if (elem && elem.nodeType === Node.ELEMENT_NODE) {\n            // NOTE: added scripts are not updating currentScript in IE.\n            if (isImportLink(elem)) {\n              this.loadImport(/** @type {!HTMLLinkElement} */ (elem));\n            } else {\n              this.loadImports(/** @type {!Element} */ (elem));\n            }\n          }\n        })\n      );\n    }\n  }\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   */\n  const isImportLink = (node) => {\n    return (\n      node.nodeType === Node.ELEMENT_NODE &&\n      node.localName === 'link' &&\n      /** @type {!HTMLLinkElement} */ (node).rel === 'import'\n    );\n  };\n\n  /**\n   * Waits for an element to finish loading. If already done loading, it will\n   * mark the element accordingly.\n   * @param {!(HTMLLinkElement|HTMLScriptElement|HTMLStyleElement)} element\n   * @param {function()=} callback\n   */\n  const whenElementLoaded = (element, callback) => {\n    if (element['__loaded']) {\n      callback && callback();\n    } else if (\n      (element.localName === 'script' && !element.src) ||\n      (element.localName === 'style' && !element.firstChild) ||\n      (element.localName === 'style' &&\n        element.namespaceURI === 'http://www.w3.org/2000/svg')\n    ) {\n      // Inline scripts,empty styles, and styles in <svg> don't trigger\n      // load/error events, consider them already loaded.\n      element['__loaded'] = true;\n      callback && callback();\n    } else {\n      const onLoadingDone = (event) => {\n        element.removeEventListener(event.type, onLoadingDone);\n        element['__loaded'] = true;\n        callback && callback();\n      };\n      element.addEventListener('load', onLoadingDone);\n      // NOTE: We listen only for load events in IE/Edge, because in IE/Edge\n      // <style> with @import will fire error events for each failing @import,\n      // and finally will trigger the load event when all @import are\n      // finished (even if all fail).\n      if (element.localName !== 'style' || (!isIE && !isEdge)) {\n        element.addEventListener('error', onLoadingDone);\n      }\n    }\n  };\n\n  /**\n   * Calls the callback when all imports in the document at call time\n   * (or at least document ready) have loaded. Callback is called synchronously\n   * if imports are already done loading.\n   * @param {function()=} callback\n   */\n  const whenReady = (callback) => {\n    // 1. ensure the document is in a ready state (has dom), then\n    // 2. watch for loading of imports and call callback when done\n    whenDocumentReady(() => whenImportsReady(() => callback && callback()));\n  };\n\n  /**\n   * Invokes the callback when document is in ready state. Callback is called\n   *  synchronously if document is already done loading.\n   * @param {!function()} callback\n   */\n  const whenDocumentReady = (callback) => {\n    const stateChanged = () => {\n      // NOTE: Firefox can hit readystate interactive without document.body existing.\n      // This is anti-spec, but we handle it here anyways by waiting for next change.\n      if (document.readyState !== 'loading' && !!document.body) {\n        document.removeEventListener('readystatechange', stateChanged);\n        callback();\n      }\n    };\n    document.addEventListener('readystatechange', stateChanged);\n    stateChanged();\n  };\n\n  /**\n   * Invokes the callback after all imports are loaded. Callback is called\n   * synchronously if imports are already done loading.\n   * @param {!function()} callback\n   */\n  const whenImportsReady = (callback) => {\n    let imports =\n      /** @type {!NodeList<!HTMLLinkElement>} */\n      (QSA(document, rootImportSelector));\n    let pending = imports.length;\n    if (!pending) {\n      callback();\n      return;\n    }\n    forEach(imports, (imp) =>\n      whenElementLoaded(imp, () => {\n        if (--pending === 0) {\n          callback();\n        }\n      })\n    );\n  };\n\n  /**\n   * Returns the import document containing the element.\n   * @param {!Node} element\n   * @return {HTMLLinkElement|Document|undefined}\n   */\n  const importForElement = (element) => {\n    if (useNative) {\n      // Return only if not in the main doc!\n      return element.ownerDocument !== document ? element.ownerDocument : null;\n    }\n    let doc = element['__importDoc'];\n    if (!doc && element.parentNode) {\n      doc = /** @type {!Element} */ (element.parentNode);\n      if (typeof doc.closest === 'function') {\n        // Element.closest returns the element itself if it matches the selector,\n        // so we search the closest import starting from the parent.\n        doc = doc.closest(importSelector);\n      } else {\n        // Walk up the parent tree until we find an import.\n        // eslint-disable-next-line no-empty\n        while (!isImportLink(doc) && (doc = doc.parentNode)) {}\n      }\n      element['__importDoc'] = doc;\n    }\n    return doc;\n  };\n\n  let importer = null;\n  /**\n   * Ensures imports contained in the element are imported.\n   * Use this to handle dynamic imports attached to body.\n   * @param {!(HTMLDocument|Element)} doc\n   */\n  const loadImports = (doc) => {\n    if (importer) {\n      importer.loadImports(doc);\n    }\n  };\n\n  const newCustomEvent = (type, params) => {\n    if (typeof window.CustomEvent === 'function') {\n      return new CustomEvent(type, params);\n    }\n    const event = /** @type {!CustomEvent} */ (document.createEvent(\n      'CustomEvent'\n    ));\n    event.initCustomEvent(\n      type,\n      Boolean(params.bubbles),\n      Boolean(params.cancelable),\n      params.detail\n    );\n    return event;\n  };\n\n  if (useNative) {\n    // Check for imports that might already be done loading by the time this\n    // script is actually executed. Native imports are blocking, so the ones\n    // available in the document by this time should already have failed\n    // or have .import defined.\n    const imps =\n      /** @type {!NodeList<!HTMLLinkElement>} */\n      (QSA(document, importSelector));\n    forEach(imps, (imp) => {\n      if (!imp.import || imp.import.readyState !== 'loading') {\n        imp['__loaded'] = true;\n      }\n    });\n    // Listen for load/error events to capture dynamically added scripts.\n    /**\n     * @type {!function(!Event)}\n     */\n    const onLoadingDone = (event) => {\n      const elem = /** @type {!Element} */ (event.target);\n      if (isImportLink(elem)) {\n        elem['__loaded'] = true;\n      }\n    };\n    document.addEventListener('load', onLoadingDone, true /* useCapture */);\n    document.addEventListener('error', onLoadingDone, true /* useCapture */);\n  } else {\n    // Override baseURI so that imported elements' baseURI can be used seemlessly\n    // on native or polyfilled html-imports.\n    // NOTE: a <link rel=import> will have `link.baseURI === link.href`, as the link\n    // itself is used as the `import` document.\n    /** @type {Object|undefined} */\n    const native_baseURI = Object.getOwnPropertyDescriptor(\n      Node.prototype,\n      'baseURI'\n    );\n    // NOTE: if not configurable (e.g. safari9), set it on the Element prototype.\n    const klass =\n      !native_baseURI || native_baseURI.configurable ? Node : Element;\n    Object.defineProperty(klass.prototype, 'baseURI', {\n      get() {\n        const ownerDoc = /** @type {HTMLLinkElement} */ (isImportLink(this)\n          ? this\n          : importForElement(this));\n        if (ownerDoc) {\n          return ownerDoc.href;\n        }\n        // Use native baseURI if possible.\n        if (native_baseURI && native_baseURI.get) {\n          return native_baseURI.get.call(this);\n        }\n        // Polyfill it if not available.\n        const base = /** @type {HTMLBaseElement} */ (document.querySelector(\n          'base'\n        ));\n        return (base || window.location).href;\n      },\n      configurable: true,\n      enumerable: true,\n    });\n\n    // Define 'import' read-only property.\n    Object.defineProperty(HTMLLinkElement.prototype, 'import', {\n      get() {\n        return /** @type {HTMLLinkElement} */ (this)['__import'] || null;\n      },\n      configurable: true,\n      enumerable: true,\n    });\n\n    whenDocumentReady(() => {\n      importer = new Importer();\n    });\n  }\n\n  /**\n    Add support for the `HTMLImportsLoaded` event and the `HTMLImports.whenReady`\n    method. This api is necessary because unlike the native implementation,\n    script elements do not force imports to resolve. Instead, users should wrap\n    code in either an `HTMLImportsLoaded` handler or after load time in an\n    `HTMLImports.whenReady(callback)` call.\n\n    NOTE: This module also supports these apis under the native implementation.\n    Therefore, if this file is loaded, the same code can be used under both\n    the polyfill and native implementation.\n   */\n  whenReady(() =>\n    document.dispatchEvent(\n      newCustomEvent('HTMLImportsLoaded', {\n        cancelable: true,\n        bubbles: true,\n        detail: undefined,\n      })\n    )\n  );\n\n  // exports\n  scope.useNative = useNative;\n  scope.whenReady = whenReady;\n  scope.importForElement = importForElement;\n  scope.loadImports = loadImports;\n})((window.HTMLImports = window.HTMLImports || {}));\n","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nexport {};\n\nlet customElements = window['customElements'];\nlet HTMLImports = window['HTMLImports'];\nlet Template = window['HTMLTemplateElement'];\n\n// global for (1) existence means `WebComponentsReady` will file,\n// (2) WebComponents.ready == true means event has fired.\nwindow.WebComponents = window.WebComponents || {};\n\nif (customElements && customElements['polyfillWrapFlushCallback']) {\n  // Here we ensure that the public `HTMLImports.whenReady`\n  // always comes *after* custom elements have upgraded.\n  let flushCallback;\n  let runAndClearCallback = function runAndClearCallback() {\n    if (flushCallback) {\n      // make sure to run the HTMLTemplateElement polyfill before custom elements upgrade\n      if (Template.bootstrap) {\n        Template.bootstrap(window.document);\n      }\n      let cb = flushCallback;\n      flushCallback = null;\n      cb();\n      return true;\n    }\n  }\n  let origWhenReady = HTMLImports['whenReady'];\n  customElements['polyfillWrapFlushCallback'](function(cb) {\n    flushCallback = cb;\n    origWhenReady(runAndClearCallback);\n  });\n\n  HTMLImports['whenReady'] = function(cb) {\n    origWhenReady(function() {\n      // custom element code may add dynamic imports\n      // to match processing of native custom elements before\n      // domContentLoaded, we wait for these imports to resolve first.\n      if (runAndClearCallback()) {\n        HTMLImports['whenReady'](cb);\n      } else {\n        cb();\n      }\n    });\n  }\n\n}\n\nHTMLImports['whenReady'](function() {\n  requestAnimationFrame(function() {\n    window.WebComponents.ready = true;\n    document.dispatchEvent(new CustomEvent('WebComponentsReady', {bubbles: true}));\n  });\n});\n","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nexport {};\n\n// It's desireable to provide a default stylesheet\n// that's convenient for styling unresolved elements, but\n// it's cumbersome to have to include this manually in every page.\n// It would make sense to put inside some HTMLImport but\n// the HTMLImports polyfill does not allow loading of stylesheets\n// that block rendering. Therefore this injection is tolerated here.\n//\n// NOTE: position: relative fixes IE's failure to inherit opacity\n// when a child is not statically positioned.\nlet style = document.createElement('style');\nstyle.textContent = ''\n    + 'body {'\n    + 'transition: opacity ease-in 0.2s;'\n    + ' } \\n'\n    + 'body[unresolved] {'\n    + 'opacity: 0; display: block; overflow: hidden; position: relative;'\n    + ' } \\n'\n    ;\nlet head = document.querySelector('head');\nhead.insertBefore(style, head.firstChild);\n"]}